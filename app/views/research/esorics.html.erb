<% provide(:title, "Research") %>
<div class="singleEntry">
	<h1 style="font-size:3em;">Protecting Private Web Content from Embedded Scripts</h1>
	<h2>Yuchen Zhou and David Evans</h2>
	<h2>University of Virginia</h2>
	<h3><a href="http://www.cosic.esat.kuleuven.be/esorics2011/">European Symposium On Research In Computer Security</a> (ESORICS 11')</h3>
	<%= image_tag "research/esorics/DOM.png", :class => "img-responsive large_img"%>
	<div class="textBlock">
		<ul>
			<li>
				<div>Introduction</div>
				<p>The project idea is to allow web developers to limit the power of third party scripts embedded directly into the page. As more and more Analytics/Gadget/Ads are incorporated into the host page without using an &lt;iframe&gt; tag, they always have full access to host page information, and these might contain user's private information that should never be revealed to a third party.</p>
				<p>We modified Google Chromium (open source version of Chrome) to add new attributes and functionality. With the newly introduced 'RACL', 'WACL' and 'WorldID' the developers can easily 'sandbox' the 3rd-party scripts. One of the most important contributions compared to previous work is that we can automatically learn very-fine grained access control policy.  The paper of this work: "Protecting Private Web Content from Embedded Scripts" is accepted into ESORICS (European Symposium on Research in Computer Security) 11'.
				</p>
				<%= image_tag "research/esorics/Proxy.png", :class => "img-responsive", :style => "margin-top:30px;"%>
				<div style="font-size:1em; margin: 20px auto 30px auto; text-align: center;">An overview of our automatic policy learner</div>
				<p>To make develop access control policies easier, we propose a proxy-based automatic policy generator.  As shown in the figure above, the proxy resends each outgoing request without authentication cookies.  The proxy collects the differences between two responses and mark them as private nodes.</p>
			</li>
			<li>
				<div>Paper</div>
				<p>A copy of our ESORICS paper can be found at <%= link_to "here", asset_path("Yuchen_ESORICS11.pdf")%>.</p>
			</li>
			<li>
				<div>Code</div>
				<p><b>Warning: these instructions were accurate as of 2011 and some of these may not work currently.  If you encounter any problems, please contact me for further instructions.</b></p>
				<p>The modifications to Chromium browser can be viewed and downloaded <a href="https://github.com/Treeeater/Chromium_on_windows" class="permalink">here</a>, <a href="https://github.com/Treeeater/chrome_bindings" class="permalink">here</a> and <a href="https://github.com/Treeeater/chromium_webkit_bindings">here</a>. The prototype implementation of our policy learner (implemented using GreasySpoon ICAP server) can be downloaded <a href="https://github.com/Treeeater/GreasySpoon-proxy-script" class="permalink">here</a>.</p>
				<p>Because the limited space of Github, we cannot upload all Chromium source code to Github.  To compile the modified version of Chromium, you first need to checkout Chromium revision 57642, see <a href="http://dev.chromium.org/developers/how-tos/get-the-code">this page</a> for more information. You may need to use gclient sync --revision src@#### to get the correct version.</p>
				<p>What you need to do then is:</p>
				<p>1) Compile and link Chromium r57642 to an executable state. See <a href="http://dev.chromium.org/developers/how-tos/build-instructions-windows">this page</a> for further information. Currently we only provide Windows version of modified Chromium browser, however Linux build only need minor tweaks and is essentially the same.</p>
				<p>2) After you can run unmodified Chromium, copy all source file downloaded from chrome_bindings repository to $CHROMIUM$\src\chrome\Debug\obj\global_intermediate\webcore\bindings(This directory will not exist if you don't compile Chromium first! Source code in this directory is auto-generated by Chromium.); If you are not asked for overwrite, you are doing something wrong.</p>
				<p>3) Copy all source file downloaded from chromium_webkit_bindings repository to $CHROMIUM$\src\chrome\Debug\obj\global_intermediate\webkit. If you are not asked for overwrite, you are doing something wrong.</p>
				<p>4) Copy all source file downloaded from Chromium_on_windows repository to $CHROMIUM$\src\third_party\WebKit\WebCore\bindings. If you are not asked for overwrite, you are doing something wrong.</p>
				<p>5) Compile and run again. You should experience no problems.  If you would like to try the release version, download the bindings from <a href="https://github.com/Treeeater/chrome_release_webcore_bindings">here</a> and redo step 2.</p>
			</li>
		</ul>
	</div>
</div>